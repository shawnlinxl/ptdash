Y
install.packages("QuantTools")
QuantTools::get_iqfeed_data("KR", "2017-06-13", "2017-07-19")
QuantTools::get_iqfeed_data("KR", "2017-06-13", "2017-07-19")
library("QuantTools", lib.loc="~/R/win-library/3.4")
detach("package:QuantTools", unload=TRUE)
library("QuantTools", lib.loc="~/R/win-library/3.4")
detach("package:QuantTools", unload=TRUE)
install.packages("quantmod")
?quantmod::getPrice
quantmod::getPrice('KR', src='yahoo')
quantmod::getSymbols("KR")
quantmod::getSymbols("KR", src = "google")
KR
install.packages("settings")
asdf <- settings::options_manager(a=1,b = 2)
asdf()
asdf(a=2)
asdf
asdf()
asdf(c=3)
asdf()
version
Sys.info()
getwd()
View(asdf)
devtools::document()
devtools::document()
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL, type = "source")
ptdash::PKG_OPTIONS()
ptdash::PKG_OPTIONS(wd = "C:/")
ptdash::PKG_OPTIONS(wd = "C:/")
ptdash::PKG_OPTIONS()
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL, type = "source")
ptdash::PKG_OPTIONS()
devtools::uninstall("ptdash")
remove.library("ptdash")
remove.packages("ptdash")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL, type = "source")
library(ptdash)
remove.packages("ptdash")
install.packages("~/ptdash_0.1.0.tar.gz")
remove.packages("ptdash")
install.packages("~/ptdash_0.1.0.tar.gz")
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
ptdash:::PKG_OPTIONS()
ptdash:::PKG_OPTIONS()
ptdash::set_pkg_options(wd = "C:/Users/Lenovo/ptdash_data")
ptdash:::PKG_OPTIONS()
ptdash:::PKG_OPTIONS()
ptdash::set_pkg_options(wd = "C:/Users/Lenovo/ptdash_data")
ptdash:::PKG_OPTIONS()
ptdash:::PKG_OPTIONS()
remove.packages("ptdash")
devtools::document()
devtools::build()
Sys.Date
Sys.Date()
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
ptdash::PKG_OPTIONS()
remove.packages("ptdash")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
ptdash::log_trade("KR", "21.65", 15, "Buy", trade_date = zoo::as.Date("2017-06-16"))
PKG_OPTIONS[["wd"]]
remove.packages("ptdash")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
ptdash::log_trade("KR", "21.65", 15, "Buy", trade_date = zoo::as.Date("2017-06-16"))
remove.packages("ptdash")
devtools::document()
devtools::build()
ptdash::log_trade("KR", "21.65", 15, "Buy", trade_date = zoo::as.Date("2017-06-16"))
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
ptdash::log_trade("KR", "21.65", 15, "Buy", trade_date = zoo::as.Date("2017-06-16"))
file.exists(dir_file)
PKG_OPTIONS()$wd
ptdash::log_trade("KR", "21.65", 15, "Buy", trade_date = zoo::as.Date("2017-06-16"))
remove.packages("ptdash")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
ptdash::log_trade("KR", "21.65", 15, "Buy", trade_date = zoo::as.Date("2017-06-16"))
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = zoo::as.Date("2017-06-16"))
remove.packages("ptdash")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = zoo::as.Date("2017-06-16"))
pattern <- "\\d-\\d"
grep(pattern, "2-3")
grepl(pattern, "2-3")
grepl(pattern, "223-3")
pattern <- "\\d\\d\\d\\d-\\d"
grepl(pattern, "223-3")
grepl(pattern, "2233-3")
pattern <- "{n}\\d-\\d"
grepl(pattern, "2233-3")
pattern <- "\\d{n}-\\d"
grepl(pattern, "2233-3")
pattern <- "\\d\{n}-\\d"
pattern <- "\\d{n}-\\d"
grepl(pattern, "2233-3")
pattern <- "{n\\d}-\\d"
grepl(pattern, "2233-3")
pattern <- "\\d{4}-\\d"
grepl(pattern, "2233-3")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
ptdash::log_trade("KR", "21.65", 15, "Buy", trade_date = zoo::as.Date("2017-06-16"))
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = zoo::as.Date("2017-06-16"))
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = "2013-02-111")
?grepl
remove.packages("ptdash")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = "2013-02-111")
ptdash::log_trade("KR", 21.65, 15, "eBuy", trade_date = "2017-06-16")
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = "2017-06-16")
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = "2017-06-16")
pattern <- ^\\d{4}-\\d{2}-\\d{2}$
pattern <- "^\\d{4}-\\d{2}-\\d{2}$"
grepl(pattern,"2016-01-01")
grepl(pattern,"2017-06-16")
remove.packages("ptdash")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = "2017-06-16")
?write.csv
remove.packages("ptdash")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = "2017-06-16")
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = "2017-06-16")
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = "2017-06-16")
remove.packages("ptdash")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = "2017-06-16")
remove.packages("ptdash")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = "2017-06-16")
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = "2017-06-16")
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = "2017-06-17")
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = "2017-06-16")
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = "2017-06-17")
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = "2017-06-18
")
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = "2017-06-18")
remove.packages("ptdash")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = "2017-06-16")
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = "2017-06-17")
remove.packages("ptdash")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = "2017-06-16")
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = "2017-06-17")
remove.packages("ptdash")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
remove.packages("ptdash")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = "2017-06-17")
ptdash::PKG_OPTIONS()
dir("./Documents")
dir()
remove.packages("ptdash")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
ptdash::log_trade("KR", 21.65, 15, "Buy", trade_date = "2017-06-16")
ptdash::log_trade("JD", 38.35, 10, "Buy", trade_date = "2017-06-16")
ptdash::log_trade("KR", 21.80, 10, "Buy", trade_date = "2017-06-16")
ptdash::log_trade("KR", 23.40, 20, "Buy", trade_date = "2017-06-30")
ptdash::log_trade("KO", 44.36, 10, "Buy", trade_date = "2017-07-06")
ptdash::log_trade("TWTR", 18.00, 9, "Buy", trade_date = "2017-07-06")
ptdash::log_trade("INTU", 133.25, 1, "Buy", trade_date = "2017-07-12")
ptdash::log_trade("EBAY", 36.10, 4, "Buy", trade_date = "2017-07-12")
ptdash::log_trade("EBAY", 37.12, 6, "Buy", trade_date = "2017-07-14")
ptdash::log_trade("INTU", 133.00, 1, "Buy", trade_date = "2017-07-14")
ptdash::log_trade("KO", 44.63, 4, "Buy", trade_date = "2017-07-14")
log_file <- read.csv(paste0(ptdash:::PKG_OPTIONS()$wd, "trade_log.csv"))
log_file
xts::as.xts(log_file)
log_file$Date <- zoo::as.Date(log_file$Date)
xts::as.xts(log_file)
log_file
xts::as.xts(log_file)
apply(log_file,class)
apply(log_file,1,class)
apply(log_file,2,class)
zoo::as.Date("2017-0202")
zoo::as.Date("2017-02-02")
class(zoo::as.Date("2017-02-02"))
log_file <-
read.csv(paste0(PKG_OPTIONS()$wd, "trade_log.csv"),
colClasses = c("Date", "character", "double", "integer", "character"))
apply(log_file,2,class)
xts::as.xts(log_file)
log_file
class(log_file)
class(log_file$Date)
class(log_file$character)
class(log_file$Ticker)
class(log_file$Quantity)
row.names(log_file) <- log_file$Date
log_file <- log_file[,-"Date"]
library(dplyr)
log_file %>% group_by(Ticker)
log_file %>% group_by(Ticker) %>% summerize(totalholding=sum(Price*Quantity))
log_file %>% group_by(Ticker) %>% summarize(totalholding=sum(Price*Quantity))
log_file %>% group_by(Ticker) %>% summarize(totalholding=sum(Price*Quantity)) %>% sort(totalholding)
log_file %>% group_by(Ticker) %>% summarize(totalholding=sum(Price*Quantity)) %>% arrange(totalholding)
log_file %>% group_by(Ticker) %>% summarize(totalholding=sum(Price*Quantity)) %>% arrange(totalholding, desc(x))
log_file %>% group_by(Ticker) %>% summarize(totalholding=sum(Price*Quantity)) %>% arrange(desc(totalholding))
log_file <- arrange(log_file, Date)
log_file
log_file <-
log_file %>%
group_by(Ticker) %>%
mutate(InitiateInvestment = (cumsum(Quantity) - Quantity == 0))
log_file
initiation_list <-
log_file %>%
filter(InitiateInvestment)
initiation_list
initiation_list <-
log_file %>%
filter(InitiateInvestment) %>%
select(Date, Ticker)
initiation_list
log_file <-
read.csv(paste0(PKG_OPTIONS()$wd, "trade_log.csv"),
colClasses = c("Date", "character", "double", "integer", "character"))
log_file <-
log_file %>%
arrange(Date)
group_by(Ticker) %>%
mutate(InitiateInvestment = (cumsum(Quantity) - Quantity == 0))
log_file <-
read.csv(paste0(PKG_OPTIONS()$wd, "trade_log.csv"),
colClasses = c("Date", "character", "double", "integer", "character"))
group_by(Ticker) %>%
mutate(InitiateInvestment = (cumsum(Quantity) - Quantity == 0))
log_file <-
read.csv(paste0(PKG_OPTIONS()$wd, "trade_log.csv"),
colClasses = c("Date", "character", "double", "integer", "character"))
log_file
log_file <-
log_file %>%
arrange(Date)
group_by(Ticker) %>%
mutate(InitiateInvestment = (cumsum(Quantity) - Quantity == 0))
log_file <-
log_file %>%
arrange(Date) %>%
group_by(Ticker) %>%
mutate(InitiateInvestment = (cumsum(Quantity) - Quantity == 0))
price_get <-
log_file %>%
filter(InitiateInvestment) %>%
select(Date, Ticker)
price_get
stock = 1
ticker <- price_get[stock,]$Ticker
dir_price_file <- paste0(dir_price_data, "price_",ticker, ".csv")
dir_price_data <- paste0(PKG_OPTIONS()$wd, "price_data/")
dir_price_data
start_date <- price_get[stock,]$Date
ticker <- price_get[stock,]$Ticker
ticker
start_date
quantmod::getSymbols.yahoo("KR", from = start_date)
quantmod::getSymbols.google("KR", from = start_date)
quantmod::getSymbols("KR", from = start_date, src = "google")
library(quantmod)
getSymbols()
?getSymbols
test <- quantmod::getSymbols("KR", from = start_date, src = "google")
test
test <- quantmod::getSymbols(Symbols = "KR", from = start_date, src = "google")
test <- quantmod::getSymbols(Symbols = "KR", src = "google")
test
quantmod::getSymbols("KR", src = "google")
quantmod::getSymbols("GOOG", src = "google")
quantmod::getSymbols("KR", src = "google")
detach(name = all)
detach()
detach("package:TTR", unload=TRUE)
detach("package:xts", unload=TRUE)
detach("package:zoo", unload=TRUE)
detach("package:dplyr", unload=TRUE)
quantmod::getSymbols("KR", src = "google")
test <- quantmod::getSymbols(Symbols = "KR", from = start_date, src = "google")
View(GOOG)
?quantmod::getSymbols
??ptdash::set_pkg_options
price_data <- getSymbols(Symbols = ticker,
src = PKG_OPTIONS()$price_source,
auto.assign = FALSE)
library(quantmod)
price_data <- getSymbols(Symbols = ticker,
src = PKG_OPTIONS()$price_source,
auto.assign = FALSE)
remove.packages("ptdash")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
price_data <- getSymbols(Symbols = ticker,
src = PKG_OPTIONS()$price_source,
auto.assign = FALSE)
library(ptdash)
price_data <- getSymbols(Symbols = ticker,
src = PKG_OPTIONS()$price_source,
auto.assign = FALSE)
price_data <- getSymbols(Symbols = ticker,
src = PKG_OPTIONS()$price_source,
auto.assign = FALSE)
library(quantmod)
library(dplyr)
price_data <- getSymbols(Symbols = ticker,
src = PKG_OPTIONS()$price_source,
auto.assign = FALSE)
library(ptdash)
price_data <- getSymbols(Symbols = ticker,
src = PKG_OPTIONS()$price_source,
auto.assign = FALSE)
price_data <- getSymbols(Symbols = ticker,
src = ptdash:::PKG_OPTIONS()$price_source,
auto.assign = FALSE)
price_data
price_data <- getSymbols(Symbols = ticker,
from = start_date,
src = ptdash:::PKG_OPTIONS()$price_source,
auto.assign = FALSE)
price_data
price_data <- getSymbols(Symbols = ticker,
from = start_date,
src = "yahoo",
auto.assign = FALSE)
price_data <- getSymbols(Symbols = ticker,
from = start_date,
src = "goog",
auto.assign = FALSE)
price_data <- getSymbols(Symbols = ticker,
from = start_date,
src = "google",
auto.assign = FALSE)
adjustOHLC(price_data)
adjustOHLC(price_data, src="google")
price_data
getDividends("KR",src="google",auto.assign = FALSE)
?getDividends
install.packages("Quandl")
library(Quandl)
Quandl("FRED/GDP", type="zoo")
Quandl.api_key(17zLYKUTzzt6whHxFZEF)
Quandl.api_key("17zLYKUTzzt6whHxFZEF")
Quandl("FRED/GDP", type="zoo")
price_data <- Quandl(paste0("Wiki",ticker), start_date = start_date)
price_data <- Quandl(paste0("Wiki\\",ticker), start_date = start_date)
price_data <- Quandl("Wiki\KR", start_date = start_date)
price_data <- Quandl("Wiki/KR", start_date = start_date)
price_data <- Quandl(paste0("WIKI/",ticker), start_date = start_date)
price_data
View(price_data)
class(price_data)
start_date <- price_get[stock,]$Date
price_data <-
Quandl(paste0("WIKI/",ticker), start_date = start_date, end_date = "2017-07-15") %>%
arrange(Date)
write.csv(price_data, dir_price_file)
dir_price_data <- paste0(PKG_OPTIONS()$wd, "price_data/")
ticker <- price_get[stock,]$Ticker
dir_price_file <- paste0(dir_price_data, "price_",ticker, ".csv")
start_date <- price_get[stock,]$Date
price_data <-
Quandl(paste0("WIKI/",ticker), start_date = start_date, end_date = "2017-07-15") %>%
arrange(Date)
write.csv(price_data, dir_price_file)
price_data <- read.csv(price_data)
price_data <- read.csv(price_data_file)
start_date <- price_get[stock,]$Date
price_data <-
Quandl(paste0("WIKI/",ticker),
start_date = start_date,
end_date = "2017-07-15") %>%
arrange(Date)
write.csv(price_data, dir_price_file, row.names = FALSE)
price_data <- read.csv(price_data_file)
price_data_file
price_data <- read.csv(dir_price_file)
start_date <- zoo::as.Date(tail(price_data$Date),1) + lubridate::days(1)
price_data
start_date <- zoo::as.Date(tail(price_data$Date),1)) + lubridate::days(1)
start_date <- zoo::as.Date(tail(price_data$Date,1)) + lubridate::days(1)
start_date
new_price_data <-
Quandl(paste0("WIKI/",ticker),
start_date = start_date,
end_date = Sys.Date()) %>%
arrange(Date)
price_data <- rbind(price_data, new_price_data)
new_price_data
head(price_data)
remove.packages("ptdash")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
remove.packages("ptdash")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
remove.packages("ptdash")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
ptdash::create_return_series()
remove.packages("ptdash")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
ptdash::create_return_series()
dir_price_data <- paste0(PKG_OPTIONS()$wd, "price_data/")
stock = 1
ticker <- price_get[stock,]$Ticker
log_file <-
read.csv(paste0(PKG_OPTIONS()$wd, "trade_log.csv"),
colClasses = c("Date", "character", "double", "integer", "character"))
log_file <-
log_file %>%
arrange(Date) %>%
group_by(Ticker) %>%
mutate(InitiateInvestment = (cumsum(Quantity) - Quantity == 0))
price_get <-
log_file %>%
filter(InitiateInvestment) %>%
select(Date, Ticker)
ticker <- price_get[stock,]$Ticker
dir_price_file <- paste0(dir_price_data, "price_",ticker, ".csv")
if (!file.exists(dir_price_file)) {
## if the price file does not exists, create one that contains all the
## price information since position is initiated
start_date <- price_get[stock,]$Date
price_data <-
Quandl(paste0("WIKI/",ticker),
start_date = start_date,
end_date = "2017-07-15")
price_data <- arrange(price_data, Date)
write.csv(price_data, dir_price_file, row.names = FALSE)
} else {
price_data <- read.csv(dir_price_file)
start_date <- zoo::as.Date(tail(price_data$Date,1)) + lubridate::days(1)
new_price_data <-
Quandl(paste0("WIKI/",ticker),
start_date = start_date,
end_date = Sys.Date())
new_price_data <- arrange(new_price_data, Date)
names(price_data) <- names(new_price_data)
price_data <- rbind(price_data, new_price_data)
}
if (!file.exists(dir_price_file)) {
## if the price file does not exists, create one that contains all the
## price information since position is initiated
start_date <- price_get[stock,]$Date
price_data <-
Quandl(paste0("WIKI/",ticker),
start_date = start_date,
end_date = "2017-07-15")
price_data <- arrange(price_data, Date)
write.csv(price_data, dir_price_file, row.names = FALSE)
} else {
price_data <- read.csv(dir_price_file)
start_date <- zoo::as.Date(tail(price_data$Date,1)) + lubridate::days(1)
new_price_data <-
Quandl(paste0("WIKI/",ticker),
start_date = start_date,
end_date = Sys.Date())
new_price_data <- arrange(new_price_data, Date)
names(price_data) <- names(new_price_data)
price_data <- rbind(price_data, new_price_data)
}
ptdash::create_return_series()
ptdash::create_return_series()
remove.packages("ptdash")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
