group_by(Ticker) %>%
arrange(Date) %>%
mutate(Total = cumsum(Quantity), Change = Quantity*Type) %>%
ungroup() %>%
as.data.frame()
pos_change
pos_change <-
pos_change %>%
group_by(Ticker) %>%
arrange(Date) %>%
mutate(Total = cumsum(Quantity*Type), Change = Quantity*Type) %>%
ungroup() %>%
as.data.frame()
pos_change <- log_file
pos_change$Type <-
as.numeric(plyr::revalue(pos_change$Type, c("Buy" = 1, "Sell" = -1)))
pos_change <-
pos_change %>%
group_by(Ticker) %>%
arrange(Date) %>%
mutate(Total = cumsum(Quantity*Type), Change = Quantity*Type) %>%
ungroup() %>%
as.data.frame()
pos_change
pos_change <- log_file
pos_change$Type <-
as.numeric(plyr::revalue(pos_change$Type, c("Buy" = 1, "Sell" = -1)))
pos_change <-
pos_change %>%
group_by(Ticker) %>%
arrange(Date) %>%
mutate(Total = cumsum(Quantity*Type), Change = Quantity*Type) %>%
select(Date, Ticker, Price, Total, Change) %>%
ungroup() %>%
as.data.frame()
pos_change
log_file <-
log_file %>%
arrange(Date) %>%
group_by(Ticker) %>%
mutate(InitiateInvestment = (Date == min(Date)))
log_file
price_get <-
log_file %>%
filter(InitiateInvestment) %>%
select(Date, Ticker)
price_get
price_get <-
log_file %>%
filter(InitiateInvestment) %>%
select(Date, Ticker) %>%
unique()
price_get
log_file <-
read.csv(dir_log_file,
colClasses = c("Date", "character", "double", "integer", "character"))
pos_change <- log_file
pos_change$Type <-
as.numeric(plyr::revalue(pos_change$Type, c("Buy" = 1, "Sell" = -1)))
pos_change <-
pos_change %>%
group_by(Ticker) %>%
arrange(Date) %>%
mutate(Total = cumsum(Quantity*Type), Change = Quantity*Type) %>%
select(Date, Ticker, Price, Total, Change) %>%
ungroup() %>%
as.data.frame()
pos_change
pos_change <-
pos_change %>%
group_by(Ticker) %>%
arrange(Date, Ticker) %>%
mutate(Total = cumsum(Quantity*Type), Change = Quantity*Type) %>%
select(Date, Ticker, Price, Total, Change) %>%
ungroup() %>%
as.data.frame()
pos_change <- log_file
pos_change$Type <-
as.numeric(plyr::revalue(pos_change$Type, c("Buy" = 1, "Sell" = -1)))
pos_change <-
pos_change %>%
group_by(Ticker) %>%
arrange(Date, Ticker) %>%
mutate(Total = cumsum(Quantity*Type), Change = Quantity*Type) %>%
select(Date, Ticker, Price, Total, Change) %>%
ungroup() %>%
as.data.frame()
pos_change
pos_change <-
pos_change %>%
group_by(Ticker) %>%
arrange(Ticker, Date) %>%
mutate(Total = cumsum(Quantity*Type), Change = Quantity*Type) %>%
select(Date, Ticker, Price, Total, Change) %>%
ungroup() %>%
as.data.frame()
pos_change <- log_file
pos_change$Type <-
as.numeric(plyr::revalue(pos_change$Type, c("Buy" = 1, "Sell" = -1)))
pos_change <-
pos_change %>%
group_by(Ticker) %>%
arrange(Ticker, Date) %>%
mutate(Total = cumsum(Quantity*Type), Change = Quantity*Type) %>%
select(Date, Ticker, Price, Total, Change) %>%
ungroup() %>%
as.data.frame()
pos_change
ticker.list <- unique(pos_change$Ticker)
ticker.list
dir_price_data <- paste0(PKG_OPTIONS()$wd, "price_data/")
dir_price_file <- paste0(dir_price_data, "price_",ticker, ".csv")
ticker = "KR"
dir_price_file <- paste0(dir_price_data, "price_",ticker, ".csv")
price_data <- read.csv(dir_price_file,
colClasses = c("Date", rep("double", 6)))
View(price_data)
pos_ticker <- filter(pos_change, ticker)
pos_ticker <- filter(pos_change, Ticker == ticker)
pos_ticker
merge(price_data, pos_ticker, by = "Date", all = TRUE)
price_data <-
read.csv(dir_price_file, colClasses = c("Date", rep("double", 6))) %>%
select(Date, Adj.Close)
price_data
pos_ticker <-
filter(pos_change, Ticker == ticker) %>%
group_by(Date, summarise(Cost = sum(Change*Price)))
pos_ticker <-
filter(pos_change, Ticker == ticker) %>%
group_by(Date) %>%
summarise(Cost = sum(Change*Price)))
pos_ticker <-
filter(pos_change, Ticker == ticker) %>%
group_by(Date) %>%
summarise(Cost = sum(Change*Price))
pos_ticker
price_data <-
read.csv(dir_price_file, colClasses = c("Date", rep("double", 6))) %>%
select(Date, Adj.Close)
pos_ticker <-
filter(pos_change, Ticker == ticker) %>%
group_by(Date) %>%
summarise(Cost = sum(Change*Price),
Total = max(Total),
Change = sum(Change)) %>%
ungroup() %>%
as.data.frame()
result <- merge(price_data, pos_ticker, by = "Date", all = TRUE)
result
result <-
merge(price_data, pos_ticker, by = "Date", all = TRUE) %>%
mutate(Total = if (is.na(Total)) lag(Total))
result <-
merge(price_data, pos_ticker, by = "Date", all = TRUE) %>%
fill(Total)
result <-
merge(price_data, pos_ticker, by = "Date", all = TRUE) %>%
dplyr::fill(Total)
result <-
merge(price_data, pos_ticker, by = "Date", all = TRUE) %>%
tidyr::fill(Total)
result
price_data <-
read.csv(dir_price_file, colClasses = c("Date", rep("double", 6))) %>%
select(Date, Adj.Close)
pos_ticker <-
filter(pos_change, Ticker == ticker) %>%
group_by(Date) %>%
summarise(Cost = sum(Change*Price),
Total = max(Total),
Change = sum(Change)) %>%
ungroup() %>%
as.data.frame()
result <-
merge(price_data, pos_ticker, by = "Date", all = TRUE) %>%
tidyr::fill(Total) %>%
mutate(Return = ((Total-Change) * Adj.Close + Cost)/ (Total*Adj.Close))
result
price_data <-
read.csv(dir_price_file, colClasses = c("Date", rep("double", 6))) %>%
select(Date, Adj.Close)
pos_ticker <-
filter(pos_change, Ticker == ticker) %>%
group_by(Date) %>%
summarise(Cost = sum(Change*Price),
Total = max(Total),
Change = sum(Change)) %>%
ungroup() %>%
as.data.frame()
result <-
merge(price_data, pos_ticker, by = "Date", all = TRUE) %>%
tidyr::fill(Total) %>%
mutate(if(is.na(Change)) 0) %>%
mutate(Return = ((Total-Change) * Adj.Close + Cost)/ (Total*Adj.Close))
result <-
merge(price_data, pos_ticker, by = "Date", all = TRUE) %>%
tidyr::fill(Total) %>%
mutate(dplyr::ifelse(is.na(Change), 0, change)) %>%
mutate(Return = ((Total-Change) * Adj.Close + Cost)/ (Total*Adj.Close))
result <-
merge(price_data, pos_ticker, by = "Date", all = TRUE) %>%
tidyr::fill(Total) %>%
mutate(ifelse(is.na(Change), 0, change)) %>%
mutate(Return = ((Total-Change) * Adj.Close + Cost)/ (Total*Adj.Close))
result <-
merge(price_data, pos_ticker, by = "Date", all = TRUE) %>%
tidyr::fill(Total) %>%
mutate(ifelse(is.na(Change), 0, Change)) %>%
mutate(Return = ((Total-Change) * Adj.Close + Cost)/ (Total*Adj.Close))
result
price_data <-
read.csv(dir_price_file, colClasses = c("Date", rep("double", 6))) %>%
select(Date, Adj.Close)
pos_ticker <-
filter(pos_change, Ticker == ticker) %>%
group_by(Date) %>%
summarise(Cost = sum(Change*Price),
Total = max(Total),
Change = sum(Change)) %>%
ungroup() %>%
as.data.frame()
result <-
merge(price_data, pos_ticker, by = "Date", all = TRUE) %>%
tidyr::fill(Total) %>%
mutate(Change = ifelse(is.na(Change), 0, Change)) %>%
mutate(Return = ((Total-Change) * Adj.Close + Cost)/ (Total*Adj.Close))
result
price_data <-
read.csv(dir_price_file, colClasses = c("Date", rep("double", 6))) %>%
select(Date, Adj.Close)
pos_ticker <-
filter(pos_change, Ticker == ticker) %>%
group_by(Date) %>%
summarise(Cost = sum(Change*Price),
Total = max(Total),
Change = sum(Change)) %>%
ungroup() %>%
as.data.frame()
result <-
merge(price_data, pos_ticker, by = "Date", all = TRUE) %>%
tidyr::fill(Total) %>%
mutate(Change = ifelse(is.na(Change), 0, Change)) %>%
mutate(Cost = ifelse(is.na(Cost), 0, Cost)) %>%
mutate(Return = ((Total-Change) * Adj.Close + Cost)/ (Total*Adj.Close))
result
result <-
merge(price_data, pos_ticker, by = "Date", all = TRUE) %>%
tidyr::fill(Total) %>%
mutate(Change = ifelse(is.na(Change), 0, Change)) %>%
mutate(Cost = ifelse(is.na(Cost), 0, Cost)) %>%
mutate(Return = ((Total-Change) * Adj.Close + Cost)/ (Total*lag(Adj.Close)))
result
result <-
merge(price_data, pos_ticker, by = "Date", all = TRUE) %>%
tidyr::fill(Total) %>%
mutate(Change = ifelse(is.na(Change), 0, Change)) %>%
mutate(Cost = ifelse(is.na(Cost), 0, Cost)) %>%
mutate(Return = ((Total - Change) * Adj.Close + Cost)/ (Total*lag(Adj.Close)) - 1)
result
result <-
merge(price_data, pos_ticker, by = "Date", all = TRUE) %>%
tidyr::fill(Total) %>%
mutate(Change = ifelse(is.na(Change), 0, Change)) %>%
mutate(Cost = ifelse(is.na(Cost), 0, Cost)) %>%
mutate(Return =
ifelse(Total == Change,
((Total - Change) * Adj.Close + Cost)/ (Total*Adj.Close) - 1,
((Total - Change) * Adj.Close + Cost)/ (Total*lag(Adj.Close)) - 1)
}
}
result <-
merge(price_data, pos_ticker, by = "Date", all = TRUE) %>%
tidyr::fill(Total) %>%
mutate(Change = ifelse(is.na(Change), 0, Change)) %>%
mutate(Cost = ifelse(is.na(Cost), 0, Cost)) %>%
mutate(Return =
ifelse(Total == Change,
((Total - Change) * Adj.Close + Cost)/ (Total*Adj.Close) - 1,
((Total - Change) * Adj.Close + Cost)/ (Total*lag(Adj.Close)) - 1))
result
log_file
result <-
merge(price_data, pos_ticker, by = "Date", all = TRUE) %>%
tidyr::fill(Total) %>%
mutate(Change = ifelse(is.na(Change), 0, Change)) %>%
mutate(Cost = ifelse(is.na(Cost), 0, Cost)) %>%
mutate(Return =
ifelse(Total == Change,
(Total*Adj.Close) / ((Total - Change) * Adj.Close + Cost) - 1,
(Total*lag(Adj.Close)) / ((Total - Change) * Adj.Close + Cost) - 1))
result
plot(result$Date,result$Return)
plot(result$Date,cumprod(result$Return+1)-1)
result <-
merge(price_data, pos_ticker, by = "Date", all = TRUE) %>%
tidyr::fill(Total) %>%
mutate(Change = ifelse(is.na(Change), 0, Change)) %>%
mutate(Cost = ifelse(is.na(Cost), 0, Cost)) %>%
mutate(Return =
ifelse(Total == Change,
(Total*Adj.Close) / Cost - 1,
(Total*lag(Adj.Close)) / ((Total - Change) * lag(Adj.Close) + Cost) - 1))
result
result <-
merge(price_data, pos_ticker, by = "Date", all = TRUE) %>%
tidyr::fill(Total) %>%
mutate(Change = ifelse(is.na(Change), 0, Change)) %>%
mutate(Cost = ifelse(is.na(Cost), 0, Cost)) %>%
mutate(Return =
ifelse(Total == Change,
(Total*Adj.Close) / Cost - 1,
(Total*Adj.Close) / ((Total - Change) * lag(Adj.Close) + Cost) - 1))
result
plot(result$Date,cumprod(result$Return+1)-1)
library(ggplot2)
mutate(NAV = Total*Adj.Close)
ggplot(result, aes(x=Date, y=Cum.Return)) + geom_line(size=1)
result
Return =
ifelse(
Total == Change,
(Total*Adj.Close) / Cost - 1,
(Total*Adj.Close) / ((Total - Change) * lag(Adj.Close) + Cost) - 1
)) %>%
mutate(Cum.Return = cumprod(Return + 1) - 1) %>%
mutate(NAV = Total*Adj.Close)
Total == Change,
(Total*Adj.Close) / Cost - 1,
(Total*Adj.Close) / ((Total - Change) * lag(Adj.Close) + Cost) - 1)) %>%
mutate(Cum.Return = cumprod(Return + 1) - 1) %>%
mutate(NAV = Total*Adj.Close)
Total == Change,
(Total*Adj.Close) / Cost - 1,
(Total*Adj.Close) / ((Total - Change) * lag(Adj.Close) + Cost) - 1)) %>%
mutate(Cum.Return = cumprod(Return + 1) - 1) %>%
mutate(NAV = Total*Adj.Close)
result <-
merge(price_data, pos_ticker, by = "Date", all = TRUE) %>%
tidyr::fill(Total) %>%
mutate(Change = ifelse(is.na(Change), 0, Change)) %>%
mutate(Cost = ifelse(is.na(Cost), 0, Cost)) %>%
mutate(
Return =
ifelse(
Total == Change,
(Total*Adj.Close) / Cost - 1,
(Total*Adj.Close) / ((Total - Change) * lag(Adj.Close) + Cost) - 1))
result
Total == Change,
(Total*Adj.Close) / Cost - 1,
(Total*Adj.Close) / ((Total - Change) * lag(Adj.Close) + Cost) - 1)) %>%
mutate(Total.Return = cumprod(Return + 1) - 1)
Total == Change,
(Total*Adj.Close) / Cost - 1,
(Total*Adj.Close) / ((Total - Change) * lag(Adj.Close) + Cost) - 1)) %>%
mutate(TotalReturn = cumprod(Return + 1) - 1) %>%
mutate(NAV = Total*Adj.Close)
result <-
merge(price_data, pos_ticker, by = "Date", all = TRUE) %>%
tidyr::fill(Total) %>%
mutate(Change = ifelse(is.na(Change), 0, Change)) %>%
mutate(Cost = ifelse(is.na(Cost), 0, Cost)) %>%
mutate(
Return =
ifelse(
Total == Change,
(Total*Adj.Close) / Cost - 1,
(Total*Adj.Close) / ((Total - Change) * lag(Adj.Close) + Cost) - 1)
) %>%
mutate(Total.Return = cumprod(Return + 1) - 1) %>%
mutate(NAV = Total*Adj.Close)
result
ggplot(result, aes(x=Date, y=Total.Return)) + geom_line(size=1)
result <-
merge(price_data, pos_ticker, by = "Date", all = TRUE) %>%
tidyr::fill(Total) %>%
mutate(Change = ifelse(is.na(Change), 0, Change)) %>%
mutate(Cost = ifelse(is.na(Cost), 0, Cost)) %>%
mutate(
Return =
ifelse(
Total == Change,
(Total*Adj.Close) / Cost - 1,
(Total*Adj.Close) / ((Total - Change) * lag(Adj.Close) + Cost) - 1)
) %>%
mutate(Total.Return = cumprod(Return + 1) - 1) %>%
mutate(NAV = Total*Adj.Close) %>%
select(Date, Return, Total.Return, NAV) %>%
mutate(Ticker = ticker)
Result
result
source('~/ptdash/R/calc_return_series.R')
calc_return_series <- function(dir_log_file) {
#' Use stock holdings and price data to find daily return on fund using
#' only invested asset.
#'
#' @param dir_log_file directory of the log file. If not provided, look for
#'   log file at default location.
#'
#' @import dplyr
#'
#' @export
## Load log file
if (is.null(dir_log_file)) {
log_file <-
read.csv(paste0(PKG_OPTIONS()$wd, "trade_log.csv"),
colClasses = c("Date", "character", "double", "integer", "character"))
} else {
log_file <-
read.csv(dir_log_file,
colClasses = c("Date", "character", "double", "integer", "character"))
}
pos_change <- log_file
## remap Buy and Sell to integer values for calculation
pos_change$Type <-
as.numeric(plyr::revalue(pos_change$Type, c("Buy" = 1, "Sell" = -1)))
##
pos_change <-
pos_change %>%
group_by(Ticker) %>%
arrange(Ticker, Date) %>%
mutate(Total = cumsum(Quantity*Type), Change = Quantity*Type) %>%
select(Date, Ticker, Price, Total, Change) %>%
ungroup() %>%
as.data.frame()
ticker.list <- unique(pos_change$Ticker)
result <- list()
for (ticker in ticker.list) {
dir_price_data <- paste0(PKG_OPTIONS()$wd, "price_data/")
dir_price_file <- paste0(dir_price_data, "price_",ticker, ".csv")
## Read the price data
price_data <-
read.csv(dir_price_file, colClasses = c("Date", rep("double", 6))) %>%
select(Date, Adj.Close)
## Manipulate position information to merge the same day's position changes
## and output Cost/Profit info
pos_ticker <-
filter(pos_change, Ticker == ticker) %>%
group_by(Date) %>%
summarise(Cost = sum(Change*Price),
Total = max(Total),
Change = sum(Change)) %>%
ungroup() %>%
as.data.frame()
result[[ticker]] <-
merge(price_data, pos_ticker, by = "Date", all = TRUE) %>%
tidyr::fill(Total) %>%
mutate(Change = ifelse(is.na(Change), 0, Change)) %>%
mutate(Cost = ifelse(is.na(Cost), 0, Cost)) %>%
mutate(
Return =
ifelse(
Total == Change,
(Total*Adj.Close) / Cost - 1,
(Total*Adj.Close) / ((Total - Change) * lag(Adj.Close) + Cost) - 1)
) %>%
mutate(Total.Return = cumprod(Return + 1) - 1) %>%
mutate(NAV = Total*Adj.Close) %>%
select(Date, Return, Total.Return, NAV) %>%
mutate(Ticker = ticker)
}
}
return(result)
source('~/ptdash/R/calc_return_series.R')
calc_return_series()
source('~/ptdash/R/calc_return_series.R')
calc_return_series()
merge(result, by = "Date")
Reduce(function(x,y) {merge(x,y, by = "Date", all = TRUE)}, result)
Reduce(function(x,y) {merge(x,y, by = "Date", all = TRUE)}, result)
result[[1]]
result[1]
result
test <- calc_return_series()
View(test)
test
Reduce(function(x,y) {merge(x,y, by = "Date", all = TRUE)}, test)
View(Reduce(function(x,y) {merge(x,y, by = "Date", all = TRUE)}, test))
View(Reduce(rbind, test))
source('~/ptdash/R/calc_return_series.R')
calc_return_series()
calc_return_series()
source('~/ptdash/R/calc_return_series.R')
calc_return_series()
calc_return_series()
calc_return_series()
remove.packages("ptdash")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
ptdash::calc_return_series()
library(ptdash)
ptdash::calc_return_series()
ptdash::calc_return_series()
source('~/ptdash/R/calc_return_series.R')
test <- calc_return_series()
remove.packages("ptdash")
devtools::document()
devtools::build()
install.packages("~/ptdash_0.1.0.tar.gz", repos = NULL)
ptdash::calc_return_series()
test <- ptdash::calc_return_series()
test
test %>%       group_by(Date) %>%
summarize(Fund.NAV = sum(NAV), Fund.Return = sum(Return*NAV)/Fund.NAV)
library(dplyr)
test %>%       group_by(Date) %>%
summarize(Fund.NAV = sum(NAV), Fund.Return = sum(Return*NAV)/Fund.NAV)
View(test %>%       group_by(Date) %>%
summarize(Fund.NAV = sum(NAV), Fund.Return = sum(Return*NAV)/Fund.NAV))
2922.65-8.27
